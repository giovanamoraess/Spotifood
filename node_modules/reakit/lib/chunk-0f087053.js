'use strict';

var styled = require('./styled.js');
var __chunk_1 = require('./chunk-582bef72.js');
var as = require('./as-84eb94f3.js');
var Box = require('./Box.js');
var __chunk_4 = require('./chunk-25591e69.js');
var PropTypes = require('prop-types');
var styledTools = require('styled-tools');
var React = require('react');

var HiddenHideComponent = function HiddenHideComponent(_ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_4.callAll(props.hide, onClick)
  }, props));
};

var HiddenHide = styled.default(HiddenHideComponent).withConfig({
  displayName: "HiddenHide",
  componentId: "nbepnv-0"
})(["", ";"], styledTools.theme("HiddenHide")); // @ts-ignore

HiddenHide.propTypes = {
  hide: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenHide$1 = as.as("button")(HiddenHide);

var HiddenShowComponent = function HiddenShowComponent(_ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_4.callAll(props.show, onClick)
  }, props));
};

var HiddenShow = styled.default(HiddenShowComponent).withConfig({
  displayName: "HiddenShow",
  componentId: "w6ef6h-0"
})(["", ";"], styledTools.theme("HiddenShow")); // @ts-ignore

HiddenShow.propTypes = {
  show: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenShow$1 = as.as("button")(HiddenShow);

var HiddenToggleComponent = function HiddenToggleComponent(_ref) {
  var onClick = _ref.onClick,
      props = __chunk_1._objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return React.createElement(Box.default, __chunk_1._extends({
    onClick: __chunk_4.callAll(props.toggle, onClick)
  }, props));
};

var HiddenToggle = styled.default(HiddenToggleComponent).withConfig({
  displayName: "HiddenToggle",
  componentId: "kd7ngs-0"
})(["", ";"], styledTools.theme("HiddenToggle")); // @ts-ignore

HiddenToggle.propTypes = {
  toggle: PropTypes.func.isRequired,
  onClick: PropTypes.func
};
var HiddenToggle$1 = as.as("button")(HiddenToggle);

exports.HiddenHide = HiddenHide$1;
exports.HiddenShow = HiddenShow$1;
exports.HiddenToggle = HiddenToggle$1;

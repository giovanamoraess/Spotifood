'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var styled = require('./styled.js');
var __chunk_1 = require('./chunk-582bef72.js');
var as = require('./as-84eb94f3.js');
var Box = require('./Box.js');
var __chunk_4 = require('./chunk-25591e69.js');
var Hidden = require('./Hidden.js');
var Step = require('./Step.js');
var __chunk_10 = require('./chunk-a56e8a31.js');
var PropTypes = require('prop-types');
var styledTools = require('styled-tools');
var React = require('react');
var hoistNonReactStatics = _interopDefault(require('hoist-non-react-statics'));
require('styled-components');
require('@emotion/is-prop-valid');
require('./chunk-e9f69eed.js');
require('./chunk-f0c301b2.js');
require('./chunk-3027c8cd.js');
require('constate');
require('./chunk-0f087053.js');
require('react-dom');

var Tabs = styled.default(Box.default).withConfig({
  displayName: "Tabs",
  componentId: "sc-19q23fg-0"
})(["", ";"], styledTools.theme("Tabs"));
Tabs.defaultProps = {
  role: "tablist"
};
var Tabs$1 = as.as("ul")(Tabs);

var initialState = {
  loop: true,
  current: 0
}; // istanbul ignore next

var TabsContainer = function TabsContainer(props) {
  return React.createElement(__chunk_10.StepContainer, __chunk_1._extends({}, props, {
    initialState: __chunk_1._objectSpread({}, initialState, props.initialState)
  }));
}; // @ts-ignore


TabsContainer.propTypes = {
  initialState: PropTypes.object
};

var TabsNext = styled.default(__chunk_10.StepNext).withConfig({
  displayName: "TabsNext",
  componentId: "wc1t0p-0"
})(["", ";"], styledTools.theme("TabsNext"));
var TabsNext$1 = as.as("button")(TabsNext);

var Component = function Component(props) {
  var isCurrent = props.isCurrent,
      tab = props.tab;
  return React.createElement(Hidden.default, __chunk_1._extends({
    id: tab + "Panel",
    "aria-labelledby": tab + "Tab",
    unmount: true,
    visible: isCurrent && isCurrent(tab)
  }, props));
};

hoistNonReactStatics(Component, Hidden.default);
var TabsPanel = styled.default(Component).withConfig({
  displayName: "TabsPanel",
  componentId: "ezrcu8-0"
})(["", ";"], styledTools.theme("TabsPanel")); // @ts-ignore

TabsPanel.propTypes = {
  tab: PropTypes.string.isRequired,
  isCurrent: PropTypes.func.isRequired
};
TabsPanel.defaultProps = {
  role: "tabpanel"
};
var TabsPanel$1 = as.as("div")(TabsPanel);

var TabsPrevious = styled.default(__chunk_10.StepPrevious).withConfig({
  displayName: "TabsPrevious",
  componentId: "sc-1hmi00r-0"
})(["", ";"], styledTools.theme("TabsPrevious"));
var TabsPrevious$1 = as.as("button")(TabsPrevious);

/* eslint-disable no-param-reassign */
function createElementRef(scope, property) {
  return function (element) {
    scope[property] = element;

    if (scope.props && scope.props.elementRef) {
      scope.props.elementRef(element);
    }
  };
}

var TabsTabComponent =
/*#__PURE__*/
function (_React$Component) {
  __chunk_1._inheritsLoose(TabsTabComponent, _React$Component);

  function TabsTabComponent() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "element", React.createRef());

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "show", function () {
      var _this$props = _this.props,
          show = _this$props.show,
          isCurrent = _this$props.isCurrent,
          tab = _this$props.tab;

      if (!isCurrent(tab)) {
        show(tab);
      }
    });

    __chunk_1._defineProperty(__chunk_1._assertThisInitialized(__chunk_1._assertThisInitialized(_this)), "keyDown", function (e) {
      var keyMap = {
        ArrowLeft: _this.props.previous,
        ArrowRight: _this.props.next
      };

      var inKeyMap = function inKeyMap(key) {
        return key in keyMap;
      };

      if (inKeyMap(e.key)) {
        e.preventDefault();
        keyMap[e.key]();
      }
    });

    return _this;
  }

  var _proto = TabsTabComponent.prototype;

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this$props2 = this.props,
        current = _this$props2.current,
        isCurrent = _this$props2.isCurrent,
        tab = _this$props2.tab;

    if (prevProps.current !== current && isCurrent(tab) && this.element && this.element.current) {
      this.element.current.focus();
    }
  };

  _proto.render = function render() {
    var _this$props3 = this.props,
        isCurrent = _this$props3.isCurrent,
        tab = _this$props3.tab,
        className = _this$props3.className,
        onClick = _this$props3.onClick,
        onFocus = _this$props3.onFocus,
        onKeyDown = _this$props3.onKeyDown;
    var active = isCurrent(tab);
    var activeClassName = active ? "active" : "";
    var finalClassName = [className, activeClassName].filter(Boolean).join(" ");
    return React.createElement(Step.default, __chunk_1._extends({
      id: tab + "Tab",
      step: tab,
      "aria-selected": active,
      "aria-controls": tab + "Panel",
      tabIndex: active ? 0 : -1,
      visible: true
    }, this.props, {
      onClick: __chunk_4.callAll(this.show, onClick),
      onFocus: __chunk_4.callAll(this.show, onFocus),
      onKeyDown: __chunk_4.callAll(this.keyDown, onKeyDown),
      className: finalClassName,
      elementRef: createElementRef(this, "element")
    }));
  };

  return TabsTabComponent;
}(React.Component);

var TabsTab = styled.default(TabsTabComponent).withConfig({
  displayName: "TabsTab",
  componentId: "stq2d4-0"
})(["", ";"], styledTools.theme("TabsTab")); // @ts-ignore

TabsTab.propTypes = {
  tab: PropTypes.string.isRequired,
  current: PropTypes.number.isRequired,
  register: PropTypes.func.isRequired,
  update: PropTypes.func.isRequired,
  unregister: PropTypes.func.isRequired,
  isCurrent: PropTypes.func.isRequired,
  show: PropTypes.func.isRequired,
  next: PropTypes.func.isRequired,
  previous: PropTypes.func.isRequired,
  className: PropTypes.string,
  disabled: PropTypes.bool,
  onClick: PropTypes.func,
  onFocus: PropTypes.func,
  onKeyDown: PropTypes.func
};

var noop = function noop() {};

TabsTab.defaultProps = {
  role: "tab",
  register: noop,
  update: noop,
  unregister: noop,
  isCurrent: function isCurrent() {
    return false;
  },
  show: noop,
  next: noop,
  previous: noop
};
var TabsTab$1 = as.as("li")(TabsTab);

var index = Object.assign(Tabs$1, {
  Container: TabsContainer,
  Next: TabsNext$1,
  Panel: TabsPanel$1,
  Previous: TabsPrevious$1,
  Tab: TabsTab$1
});

exports.default = index;
exports.initialState = initialState;

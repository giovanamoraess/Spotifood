import styled from './styled.js';
import { a as _extends } from './chunk-fb907809.js';
import { a as as } from './as-3754c325.js';
import Overlay from './Overlay.js';
import { a as OverlayContainer, b as OverlayToggle, c as OverlayShow, d as OverlayHide } from './chunk-e62571e2.js';
import { func, string, oneOfType, arrayOf, bool, number, oneOf, object, node } from 'prop-types';
import { theme, ifProp } from 'styled-tools';
import { createElement, Component, createRef } from 'react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import 'styled-components';
import '@emotion/is-prop-valid';
import './Hidden.js';
import './chunk-3dd91a32.js';
import './chunk-a7ce379e.js';
import './Box.js';
import './chunk-d8771a86.js';
import './chunk-d13f9581.js';
import 'constate';
import './chunk-7684adef.js';
import 'react-dom';

var SidebarComponent = function SidebarComponent(props) {
  return createElement(Overlay, _extends({
    defaultSlide: props.align === "right" ? "left" : "right"
  }, props));
};

hoistNonReactStatics(SidebarComponent, Overlay);
var Sidebar = styled(SidebarComponent).withConfig({
  displayName: "Sidebar",
  componentId: "sc-1ujdgs6-0"
})(["top:0;height:100vh;transform:none;overflow:auto;left:", ";right:", ";", ";"], ifProp({
  align: "right"
}, "auto", 0), ifProp({
  align: "right"
}, 0, "auto"), theme("Sidebar")); // @ts-ignore

Sidebar.propTypes = {
  align: oneOf(["left", "right"])
};
Sidebar.defaultProps = {
  align: "left",
  translateX: 0,
  translateY: 0
};
var Sidebar$1 = as("div")(Sidebar);

var SidebarContainer = OverlayContainer;

var SidebarToggle = styled(OverlayToggle).withConfig({
  displayName: "SidebarToggle",
  componentId: "sc-1ldhjpz-0"
})(["", ";"], theme("SidebarToggle"));
var SidebarToggle$1 = as("button")(SidebarToggle);

var SidebarShow = styled(OverlayShow).withConfig({
  displayName: "SidebarShow",
  componentId: "sc-1jmdl92-0"
})(["", ";"], theme("SidebarShow"));
var SidebarShow$1 = as("button")(SidebarShow);

var SidebarHide = styled(OverlayHide).withConfig({
  displayName: "SidebarHide",
  componentId: "sc-1wp4kne-0"
})(["", ";"], theme("SidebarHide"));
var SidebarHide$1 = as("button")(SidebarHide);

var index = Object.assign(Sidebar$1, {
  Container: SidebarContainer,
  Toggle: SidebarToggle$1,
  Show: SidebarShow$1,
  Hide: SidebarHide$1
});

export default index;

import styled from './styled.js';
import { a as as } from './as-3754c325.js';
import { a as bool$1, i as value } from './chunk-3dd91a32.js';
import Box from './Box.js';
import { func, string, oneOfType, arrayOf, bool, number, oneOf, object, node } from 'prop-types';
import { theme } from 'styled-tools';
import 'styled-components';
import './chunk-fb907809.js';
import 'react';
import 'hoist-non-react-statics';
import '@emotion/is-prop-valid';
import './chunk-a7ce379e.js';

var Grid = styled(Box).withConfig({
  displayName: "Grid",
  componentId: "sc-1bcnzje-0"
})(["display:grid;&&&{", " ", " ", " ", " ", " ", " ", " ", "}", ";"], bool$1("grid-auto-flow", ["row", "column", "dense"]), value("grid-gap", "gap"), value("grid-template", "template"), value("grid-template-areas", "areas"), value("grid-template-columns", "columns"), value("grid-template-rows", "rows"), value("grid-auto-columns", "autoColumns"), value("grid-auto-rows", "autoRows"), theme("Grid"));
var valueType = oneOfType([string, number]); // @ts-ignore

Grid.propTypes = {
  row: bool,
  column: bool,
  dense: bool,
  gap: valueType,
  template: valueType,
  areas: valueType,
  columns: valueType,
  rows: valueType,
  autoColumns: valueType,
  autoRows: valueType
};
var Grid$1 = as("div")(Grid);

var GridItem = styled(Box).withConfig({
  displayName: "GridItem",
  componentId: "sc-1q0uic8-0"
})(["&&&{", ";", ";", ";", ";", ";", ";", ";}", ";"], value("grid-area", "area"), value("grid-column", "column"), value("grid-row", "row"), value("grid-column-start", "columnStart"), value("grid-column-end", "columnEnd"), value("grid-row-start", "rowStart"), value("grid-row-end", "rowEnd"), theme("GridItem"));
var valueType$1 = oneOfType([string, number]); // @ts-ignore

GridItem.propTypes = {
  area: valueType$1,
  column: valueType$1,
  row: valueType$1,
  columnStart: valueType$1,
  columnEnd: valueType$1,
  rowStart: valueType$1,
  rowEnd: valueType$1
};
var GridItem$1 = as("div")(GridItem);

var index = Object.assign(Grid$1, {
  Item: GridItem$1
});

export default index;

import styled from './styled.js';
import { b as _objectWithoutPropertiesLoose } from './chunk-fb907809.js';
import { a as as } from './as-3754c325.js';
import { a as bool$1, b as bgColorWithProps, c as textColorWithProps } from './chunk-3dd91a32.js';
import { func, string, oneOfType, arrayOf, bool, number, oneOf, object, node } from 'prop-types';
import { theme } from 'styled-tools';
import { createElement, Component, createRef } from 'react';
import 'styled-components';
import 'hoist-non-react-statics';
import '@emotion/is-prop-valid';
import './chunk-a7ce379e.js';

var positions = ["static", "absolute", "fixed", "relative", "sticky"];

var BoxComponent = function BoxComponent(_ref) {
  var T = _ref.as,
      props = _objectWithoutPropertiesLoose(_ref, ["as"]);

  return createElement(T, props);
};

var Box = styled(BoxComponent).withConfig({
  displayName: "Box",
  componentId: "sc-1tbf5pj-0"
})(["margin:unset;padding:unset;border:unset;background:unset;font:unset;font-family:inherit;font-size:100%;box-sizing:border-box;background-color:", ";color:", ";&:focus:not(:focus-visible){outline:none;}", ";&&&{", ";}"], bgColorWithProps, textColorWithProps, theme("Box"), bool$1("position", positions));
var asTypes = [func, string]; // @ts-ignore

Box.propTypes = {
  as: oneOfType(asTypes.concat([arrayOf(oneOfType(asTypes))])),
  opaque: bool,
  palette: string,
  tone: number,
  static: bool,
  absolute: bool,
  fixed: bool,
  relative: bool,
  sticky: bool
};
var Box$1 = as("div")(Box);

export default Box$1;

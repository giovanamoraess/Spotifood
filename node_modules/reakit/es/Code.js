import styled from './styled.js';
import { a as _extends } from './chunk-fb907809.js';
import { a as as } from './as-3754c325.js';
import Box from './Box.js';
import { func, string, oneOfType, arrayOf, bool, number, oneOf, object, node } from 'prop-types';
import { theme } from 'styled-tools';
import { createElement, Component, createRef } from 'react';
import 'styled-components';
import 'hoist-non-react-statics';
import '@emotion/is-prop-valid';
import './chunk-3dd91a32.js';
import './chunk-a7ce379e.js';

var CodeComponent = function CodeComponent(props) {
  if (props.block) {
    return createElement(Box, _extends({
      as: "pre"
    }, props), createElement("code", {
      className: props.codeClassName
    }, props.children));
  }

  var className = props.codeClassName ? (props.className + " " + props.codeClassName).trim() : ("" + props.className).trim();
  return createElement(Box, _extends({
    as: "code"
  }, props, {
    className: className
  }));
};

var Code = styled(Box).withConfig({
  displayName: "Code",
  componentId: "e6efej-0"
})(["", ";"], theme("Code")); // @ts-ignore

Code.propTypes = {
  block: bool,
  codeClassName: string
};
Code.defaultProps = {
  opaque: true,
  palette: "background",
  tone: -2
};
var Code$1 = as(CodeComponent)(Code);

export default Code$1;

import styled from './styled.js';
import { a as _extends, b as _objectWithoutPropertiesLoose } from './chunk-fb907809.js';
import { a as as } from './as-3754c325.js';
import Box from './Box.js';
import { a as callAll } from './chunk-d8771a86.js';
import { func, string, oneOfType, arrayOf, bool, number, oneOf, object, node } from 'prop-types';
import { theme } from 'styled-tools';
import { createElement, Component, createRef } from 'react';

var HiddenHideComponent = function HiddenHideComponent(_ref) {
  var onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return createElement(Box, _extends({
    onClick: callAll(props.hide, onClick)
  }, props));
};

var HiddenHide = styled(HiddenHideComponent).withConfig({
  displayName: "HiddenHide",
  componentId: "nbepnv-0"
})(["", ";"], theme("HiddenHide")); // @ts-ignore

HiddenHide.propTypes = {
  hide: func.isRequired,
  onClick: func
};
var HiddenHide$1 = as("button")(HiddenHide);

var HiddenShowComponent = function HiddenShowComponent(_ref) {
  var onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return createElement(Box, _extends({
    onClick: callAll(props.show, onClick)
  }, props));
};

var HiddenShow = styled(HiddenShowComponent).withConfig({
  displayName: "HiddenShow",
  componentId: "w6ef6h-0"
})(["", ";"], theme("HiddenShow")); // @ts-ignore

HiddenShow.propTypes = {
  show: func.isRequired,
  onClick: func
};
var HiddenShow$1 = as("button")(HiddenShow);

var HiddenToggleComponent = function HiddenToggleComponent(_ref) {
  var onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["onClick"]);

  return createElement(Box, _extends({
    onClick: callAll(props.toggle, onClick)
  }, props));
};

var HiddenToggle = styled(HiddenToggleComponent).withConfig({
  displayName: "HiddenToggle",
  componentId: "kd7ngs-0"
})(["", ";"], theme("HiddenToggle")); // @ts-ignore

HiddenToggle.propTypes = {
  toggle: func.isRequired,
  onClick: func
};
var HiddenToggle$1 = as("button")(HiddenToggle);

export { HiddenHide$1 as a, HiddenShow$1 as b, HiddenToggle$1 as c };
